#version 400 core

in vec3 position;
in vec2 textureCoords;
in vec3 normal;

uniform mat4 transformationMatrix;
uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;
uniform vec3 lightPosition;

out vec2 pass_textureCoords;
out vec3 surfaceNormal;
out vec3 toLightVector;
out vec4 vertPos;

void main(void) {
	vec4 vertPosOriginal = vec4(position, 1.0f);
	vec4 worldPosition = transformationMatrix * vertPosOriginal;
	vec4 final = projectionMatrix * viewMatrix * worldPosition;
	gl_Position =  final;
	pass_textureCoords = textureCoords;
	
	surfaceNormal = (transformationMatrix * vec4(normal, 0.0)).xyz;
	toLightVector = lightPosition - worldPosition.xyz;
	vertPos = final;
}